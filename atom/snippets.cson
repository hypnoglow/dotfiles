# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

#
# javascript
#

'.source.js':
  'Console Log':
    'prefix': 'cl'
    'body': 'console.log($1);'
  'Function Short':
    'prefix': 'fu'
    'body': 'function() {$1}'
  'Process Exit':
    'prefix': 'pe'
    'body': 'process.exit(1);'

 #
 # php
 #

'.source.php':
  'Public Function':
    'prefix': 'pubf'
    'body': 'public function $1($2)\n{$3}'
  'echo json_encode':
    'prefix': 'ej'
    'body': 'echo json_encode($1, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . PHP_EOL;\ndie();'

#
# shell script
#

'.source.shell':
  'Direct execution warning':
    'prefix': '#WD'
    'body': '# WARNING! This file should not be executed directly.'
  'Full comment line':
    'prefix': '#80'
    'body': '################################################################################'

#
# golang
#

'.source.go':
  'os.Exit()':
    'prefix': 'ex'
    'body': 'os.Exit($1)'
  'package main':
    'prefix': 'pm'
    'body': 'package main\n\nfunc main() {\n\t$1\n}'
  'fmt.Fscanf()':
    'prefix': 'fsc'
    'body': 'fmt.Scanf("%$1", $2)'
  'fmt.Errorf()':
    'prefix': 'fe'
    'body': 'fmt.Errorf($1)'
  'fmt.Debug()':
    'prefix': 'fpd'
    'body': 'fmt.Printf("@@@ DEBUG @@@ : %#v\\\\n", $1)'
  'json':
    'prefix': 'json'
    'body': '`json:"$1"`'

#
# markdown
#

'.source.gfm':
  'js code':
    'prefix': 'jsc'
    'body': '```js\n$1\n```\n'
  'sql code':
    'prefix': 'sqlc'
    'body': '```sql\n$1\n```\n'
  'go code':
    'prefix': 'goc'
    'body': '```go\n$1\n```\n'
