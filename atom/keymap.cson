# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.platform-linux atom-text-editor':
  # Golang binginds
  'ctrl-b': 'golang:godef'
  'ctrl-shift-B': 'golang:godef-return'
  'ctrl-t d': 'go-guru:describe'
  'ctrl-t c': 'go-guru:callers'
  'ctrl-t r': 'golang:gorename'

'.platform-linux':
  'ctrl-p': 'fuzzy-finder:toggle-file-finder'
  'ctrl-b': 'fuzzy-finder:toggle-buffer-finder'
  'ctrl-shift-B': 'fuzzy-finder:toggle-git-status-finder'

'.platform-linux .find-and-replace .replace-container atom-text-editor':
  'ctrl-r': 'find-and-replace:replace-next'
  'ctrl-shift-r': 'find-and-replace:replace-all'

'atom-text-editor':
  'ctrl-alt-l': 'custom:reformat'
  'ctrl-alt-\' \'': 'custom:replace-surrounding'
  'ctrl-alt-\' "': 'custom:replace-surrounding'
  'ctrl-alt-\' {': 'custom:replace-surrounding'
  'ctrl-alt-\' }': 'custom:replace-surrounding'
  'ctrl-alt-\' [': 'custom:replace-surrounding'
  'ctrl-alt-\' ]': 'custom:replace-surrounding'
  'ctrl-alt-\' (': 'custom:replace-surrounding'
  'ctrl-alt-\' )': 'custom:replace-surrounding'
  'ctrl-h': 'custom:swap'
  # Requires 'expand-region' package
  'alt-up': 'expand-region:expand'
  'alt-down': 'expand-region:shrink'

  # TODO: only for GO files
  'ctrl-t': 'golang:toggle-panel'

# TODO: ctrl-t and ctrl-p are the same

".platform-linux atom-workspace atom-text-editor:not([mini])":
  "ctrl-shift-up": "editor:move-line-up"
  "ctrl-shift-down": "editor:move-line-down"

'.tree-view':
  'r': 'tree-view:rename'
  'c': 'tree-view:copy'
  'p': 'tree-view:paste'

".platform-darwin atom-workspace atom-text-editor:not([mini])":
  "cmd-shift-up": "editor:move-line-up"
  "cmd-shift-down": "editor:move-line-down"
