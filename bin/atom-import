#!/bin/bash
#
# Fast Atom packages import.
#
# This script reads packages list from the file `~/.atom/packages.list`.
# If a package from the list is not installed - installs it.
# Also, this script deletes all packages that are installed but not present
# in the packages list.

is_version_lower() {
    [ "$1" = "$2" ] && return 1
    [ "$1" = "$(echo -e "$1\n$2" | sort -V | head -n1)" ]
}

if [ ! -r "${HOME}/.atom/packages.list" ] ; then
    echo "No ~/.atom/packages.list file present." >&2
    exit 1
fi

apm list --bare --installed > /tmp/atom-packages.list

# Check if some currently installed packages should be removed.
for package in $(cat /tmp/atom-packages.list) ; do
    package=${package%@*}
    if ! grep -q "${package}" "${HOME}/.atom/packages.list"; then
        read -n 1 -p "Delete package ${package}? [y/n]: " answer
        echo
        if [ "${answer}" = "y" ] || [ "${answer}" = "Y" ] ; then
            apm uninstall "${package}"
        fi
    fi
done

# Check if some packages listed in ~/.atom/packages.list
# should be installed or updated.
for package in $(cat "${HOME}/.atom/packages.list") ; do
    packageName=${package%@*}
    packageVersion=${package#*@}

    installedPackage=$(grep ${packageName} /tmp/atom-packages.list)
    if [ -z "${installedPackage}" ]; then
        echo "Install new package ${package}"
        apm install --production "${package}"
        continue
    fi

    # In installed package has lower version - update.
    installedPackageVersion=${installedPackage#*@}
    if is_version_lower "$installedPackageVersion" "$packageVersion"; then
        echo "Update installed package $package"
        apm install --production "${package}"
        continue
    fi
done

echo "Atom packages are consistent with the ~/.atom/packages.list"
exit 0
