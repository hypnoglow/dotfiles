#!/bin/bash
#
# Fast Atom packages import.
#
# This script reads packages list from the file `~/.atom/packages.list`.
# If a package from the list is not installed - installs it.
# Also, this script deletes all packages that are installed but not present
# in the packages list.

# Function that compares versions.
# Returns:
# 0 if equal
# 1 if $1 > $2
# 2 if $1 < $2
vercomp() {
    if [[ "$1" == "$2" ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

if [ ! -r "${HOME}/.atom/packages.list" ] ; then
    echo "No ~/.atom/packages.list file present." >&2
    exit 1
fi

apm list --bare --installed > /tmp/atom-packages.list

# Check if some currently installed packages should be removed.
for package in $(cat /tmp/atom-packages.list) ; do
    package=${package%@*}
    if ! grep -q "${package}" "${HOME}/.atom/packages.list"; then
        read -n 1 -p "Delete package ${package}? [y/n]: " answer
        echo
        if [ "${answer}" = "y" ] || [ "${answer}" = "Y" ] ; then
            apm uninstall "${package}"
        fi
    fi
done

# Check if some packages listed in ~/.atom/packages.list
# should be installed or updated.
for package in $(cat "${HOME}/.atom/packages.list") ; do
    packageName=${package%@*}
    packageVersion=${package#*@}

    installedPackage=$(grep "${packageName}@" /tmp/atom-packages.list)
    if [ -z "${installedPackage}" ]; then
        echo "Install new package ${package}"
        apm install --production "${package}"
        continue
    fi

    # In installed package has lower version - update.
    installedPackageVersion=${installedPackage#*@}
    vercomp "$installedPackageVersion" "$packageVersion"
    if [[ $? == 2 ]]; then
        echo "Update installed package $installedPackage"
        apm install --production "${package}"
        continue
    fi
done

echo "Atom packages are consistent with the ~/.atom/packages.list"
exit 0
