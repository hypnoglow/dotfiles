# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

# Just to test rebinding
#'atom-workspace atom-text-editor':
#  'ctrl-a': 'editor:move-to-first-character-of-line'

'.platform-linux .find-and-replace .replace-container atom-text-editor':
  'ctrl-r': 'find-and-replace:replace-next'
  'ctrl-shift-r': 'find-and-replace:replace-all'

'atom-text-editor':
  'ctrl-alt-l': 'custom:reformat'
  'ctrl-alt-\' \'': 'custom:replace-surrounding'
  'ctrl-alt-\' "': 'custom:replace-surrounding'
  'ctrl-alt-\' {': 'custom:replace-surrounding'
  'ctrl-alt-\' }': 'custom:replace-surrounding'
  'ctrl-alt-\' [': 'custom:replace-surrounding'
  'ctrl-alt-\' ]': 'custom:replace-surrounding'
  'ctrl-alt-\' (': 'custom:replace-surrounding'
  'ctrl-alt-\' )': 'custom:replace-surrounding'
  'ctrl-h': 'custom:swap'
  # Requires 'expand-region' package
  'alt-up': 'expand-region:expand'
  'alt-down': 'expand-region:shrink'

# TODO: ctrl-t and ctrl-p are the same

".platform-linux atom-workspace atom-text-editor:not([mini])":
  "ctrl-shift-up": "editor:move-line-up"
  "ctrl-shift-down": "editor:move-line-down"

'.tree-view':
  'r': 'tree-view:rename'
  'c': 'tree-view:copy'
  'p': 'tree-view:paste'
